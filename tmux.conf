# vi: set ft=sh :
set-option -g default-shell /usr/bin/zsh

set -g default-terminal "screen-256color"
set-option -sa terminal-overrides ',xterm-256color:RGB'

# Start window numbers at 1 to match keyboard order
set -g base-index 1
set-window-option -g pane-base-index 1

# Use Ctrl-a instead of Ctrl-B
set-option -g prefix C-a
unbind-key C-b
# Use double Ctrl-a for nested sessions
bind-key C-a send-prefix

# Increase scrollback lines
set -g history-limit 10000

# Reload tmux.conf with 'r'
bind r source-file ~/.tmux.conf \; display "Reloaded tmux.conf!"

# Renumber windows sequentially after closing any of them
set -g renumber-windows on

# Color and terminal settings
set-option -g status-style fg=black,bg=yellow

set-window-option -g window-status-current-style fg=white,bg=black

set-window-option -g clock-mode-colour cyan

set-option -g message-style fg=black,bg=cyan

# Enable mouse support
set -g mouse on

# Indicate window activity
set -g monitor-activity on
set -g visual-activity on

# Set status bar to show system information
# see strftime docs for % date symbols
set -g status-right '#[fg=white] %a %b %d %I:%M%p'

# Don't delay vim return to normal mode after pressing Esc
set -s escape-time 0

# Enable vi bindings for copy-mode ( prefix+[ )
set-window-option -g mode-keys vi
set -g set-clipboard on

#===============================================================================
# Keybindings
#-------------------------------------------------------------------------------
# Vim style split navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Set window split mapping
unbind %
unbind '"'
bind | split-window -h -c '#{pane_current_path}'
bind - split-window -v -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
      | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n 'C-\' if-shell "$is_vim" "send-keys 'C-\\'" "select-pane -l"

# Vi-copy extra keybindings
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
# Linux
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "xclip -sel clip -i"
# OSX
# bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel "pbcopy"
